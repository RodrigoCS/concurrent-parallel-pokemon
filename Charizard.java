import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.awt.Color;
import java.awt.BorderLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import java.util.function.Consumer;

import javafx.scene.control.Alert;

class  Charizard extends Sprite  {
    final int WIDTH = 27;
    final int HEIGHT = 27;
    int x, y;
    Thread mainThread;
    Canvas canvas;
    final String SPRITE_1 = "SPRITE_1";
    final String SPRITE_2 = "SPRITE_2";
    final String SPRITE_3 = "SPRITE_3";
    String sprite = SPRITE_1;
    String lastSprite = SPRITE_1;
    int clickCount = 0;

    Color[] colors = {
        Color.decode("#ffffff"),
        Color.decode("#000000"),
        Color.decode("#74c854"),
        Color.decode("#d03800"),
        Color.decode("#303888"),
        Color.decode("#f88058"),
        Color.decode("#b8c8f0"),
        Color.decode("#980000"),
        Color.decode("#f8f000"),
        Color.decode("#a06800"),
        Color.decode("#d8b000")
    };

    int[][] idle = {
        { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 5, 1, 0, 0, 0, 1, 0, 0, 0, 5, 0, 1, 0, 0, 0, 1, 5, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 3, 1, 0, 0, 1, 3, 1, 0, 5, 5, 1, 3, 1, 0, 0, 1, 3, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 1, 5, 3, 1, 0, 0, 1, 5, 1, 0, 5, 8, 1, 5, 1, 0, 0, 1, 3, 7, 1, 0, 0, 0 },
        { 0, 0, 0, 1, 3, 7, 3, 1, 0, 1, 5, 1, 0, 5, 8, 1, 5, 1, 0, 1, 3, 7, 3, 1, 0, 0, 0 },
        { 0, 0, 1, 5, 7, 4, 3, 1, 0, 1, 3, 5, 1, 1, 1, 5, 3, 1, 0, 1, 3, 4, 7, 3, 1, 0, 0 },
        { 0, 0, 1, 3, 4, 4, 7, 1, 0, 1, 5, 5, 5, 7, 5, 5, 5, 1, 0, 1, 7, 4, 4, 3, 1, 0, 0 },
        { 0, 1, 5, 4, 4, 4, 4, 3, 1, 3, 3, 5, 5, 3, 5, 5, 3, 3, 1, 7, 4, 4, 4, 7, 3, 1, 0 },
        { 0, 1, 3, 4, 4, 1, 4, 7, 1, 7, 0, 7, 5, 3, 5, 7, 0, 7, 1, 4, 4, 1, 4, 4, 7, 1, 0 },
        { 0, 1, 3, 4, 4, 1, 4, 4, 1, 3, 0, 1, 7, 5, 7, 1, 0, 3, 1, 4, 4, 1, 4, 4, 7, 1, 0 },
        { 1, 3, 4, 4, 4, 1, 4, 4, 4, 1, 3, 3, 3, 3, 3, 3, 3, 1, 4, 4, 4, 1, 4, 4, 4, 7, 1 },
        { 1, 3, 4, 4, 4, 1, 4, 1, 4, 4, 1, 3, 5, 3, 5, 3, 1, 4, 4, 1, 4, 1, 4, 4, 4, 7, 1 },
        { 1, 3, 4, 4, 1, 0, 1, 1, 4, 4, 1, 3, 7, 5, 7, 3, 1, 4, 4, 1, 1, 0, 1, 4, 4, 7, 1 },
        { 1, 5, 4, 4, 1, 3, 1, 6, 1, 1, 1, 0, 3, 3, 3, 0, 1, 1, 1, 6, 1, 3, 1, 4, 4, 3, 1 },
        { 1, 5, 4, 1, 0, 3, 7, 3, 1, 7, 3, 1, 3, 5, 3, 1, 7, 7, 1, 3, 7, 3, 0, 1, 4, 3, 1 },
        { 1, 5, 4, 1, 3, 7, 7, 3, 1, 3, 7, 7, 1, 1, 1, 7, 7, 3, 1, 3, 7, 7, 3, 1, 4, 3, 1 },
        { 1, 3, 4, 4, 1, 3, 3, 1, 7, 7, 7, 3, 7, 7, 7, 3, 7, 7, 7, 1, 3, 3, 1, 4, 4, 7, 1 },
        { 0, 1, 3, 4, 4, 1, 1, 7, 7, 1, 3, 3, 3, 3, 3, 3, 3, 1, 7, 7, 1, 1, 4, 4, 7, 1, 0 },
        { 0, 1, 3, 1, 1, 3, 3, 1, 1, 3, 3, 10, 8, 8, 8, 10, 3, 3, 1, 1, 1, 0, 1, 1, 7, 1, 0 },
        { 0, 0, 1, 0, 1, 9, 1, 3, 1, 3, 10, 8, 8, 8, 8, 8, 10, 3, 1, 7, 1, 0, 0, 0, 1, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 3, 5, 1, 3, 8, 8, 8, 8, 8, 8, 10, 3, 1, 3, 7, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 5, 5, 5, 1, 10, 8, 8, 8, 8, 10, 9, 1, 3, 3, 3, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 3, 5, 3, 7, 1, 9, 10, 10, 10, 9, 1, 7, 3, 3, 7, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 7, 3, 7, 7, 1, 1, 1, 1, 1, 1, 1, 7, 7, 7, 3, 7, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 0, 3, 6, 7, 1, 0, 0, 0, 0, 0, 0, 0, 1, 7, 6, 7, 0, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0 }
    };
    
    int[][] attack1 = {
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 7, 5, 3, 3, 7, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 1, 5, 1, 0, 1, 3, 5, 3, 3, 3, 1, 0, 1, 5, 1, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 1, 3, 1, 0, 1, 3, 5, 3, 3, 3, 1, 0, 1, 3, 1, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 3, 3, 3, 1, 3, 5, 5, 3, 3, 3, 3, 1, 3, 3, 3, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 3, 7, 3, 1, 3, 5, 3, 3, 3, 3, 3, 1, 3, 7, 3, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 3, 3, 4, 3, 1, 7, 5, 3, 3, 3, 3, 7, 1, 3, 4, 3, 3, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 3, 7, 4, 7, 3, 1, 3, 3, 3, 3, 3, 1, 3, 7, 4, 7, 3, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 3, 4, 1, 4, 3, 1, 7, 7, 3, 3, 7, 1, 3, 4, 1, 4, 3, 1, 0, 0, 0, 0 },
        { 0, 0, 1, 1, 1, 7, 4, 1, 4, 7, 3, 1, 3, 3, 3, 1, 3, 7, 4, 1, 4, 7, 1, 1, 1, 0, 0 },
        { 0, 1, 0, 3, 1, 7, 4, 1, 4, 4, 3, 1, 3, 3, 3, 1, 3, 4, 4, 1, 4, 7, 1, 3, 0, 1, 0 },
        { 0, 0, 1, 0, 3, 1, 4, 1, 4, 4, 1, 1, 3, 3, 3, 1, 1, 4, 4, 1, 4, 1, 3, 0, 1, 0, 0 },
        { 0, 1, 0, 7, 3, 1, 4, 1, 1, 1, 1, 7, 3, 3, 3, 7, 1, 1, 1, 1, 4, 1, 3, 7, 0, 1, 0 },
        { 0, 0, 1, 3, 3, 3, 1, 1, 7, 3, 7, 7, 3, 3, 3, 7, 7, 3, 7, 1, 1, 3, 3, 3, 1, 0, 0 },
        { 0, 0, 0, 1, 1, 7, 3, 3, 3, 3, 7, 3, 3, 3, 3, 3, 7, 3, 3, 3, 3, 7, 1, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 1, 1, 1, 1, 7, 7, 3, 3, 3, 3, 3, 7, 7, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 7, 4, 1, 1, 7, 3, 3, 3, 3, 3, 3, 3, 7, 1, 1, 4, 7, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 7, 1, 0, 1, 3, 3, 10, 8, 8, 8, 10, 3, 3, 1, 0, 1, 7, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 1, 1, 7, 3, 10, 8, 8, 8, 8, 8, 10, 3, 7, 1, 1, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 1, 7, 3, 1, 10, 8, 8, 8, 8, 8, 10, 1, 3, 7, 1, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 3, 5, 5, 1, 9, 8, 8, 8, 8, 8, 9, 1, 5, 3, 7, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 3, 5, 3, 7, 1, 9, 10, 10, 10, 9, 1, 7, 3, 3, 7, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 7, 3, 7, 7, 1, 1, 9, 9, 9, 1, 1, 7, 3, 7, 7, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 0, 7, 0, 7, 1, 0, 0, 1, 1, 1, 0, 0, 1, 7, 0, 7, 0, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 }
    };
    
      int [][] attack2 = {
        { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 },
        { 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1 },
        { 0, 1, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 3, 1, 0 },
        { 0, 0, 1, 5, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 5, 1, 0, 0 },
        { 0, 0, 1, 4, 5, 3, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 3, 5, 4, 1, 0, 0 },
        { 0, 0, 0, 1, 4, 7, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5, 3, 4, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 5, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 5, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 4, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 4, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 1, 4, 3, 1, 0, 0, 0, 0, 0, 0, 0, 1, 3, 4, 1, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 1, 4, 3, 1, 0, 0, 1, 0, 0, 1, 3, 4, 1, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 1, 1, 3, 1, 1, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 3, 7, 1, 3, 1, 7, 3, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 1, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1, 3, 3, 3, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 5, 1, 3, 3, 3, 1, 5, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 5, 1, 3, 3, 3, 1, 5, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 1, 1, 1, 3, 7, 3, 1, 3, 5, 1, 1, 1, 5, 3, 1, 3, 7, 3, 1, 1, 1, 0, 0, 0 },
        { 0, 0, 1, 3, 5, 3, 3, 7, 3, 1, 5, 5, 5, 3, 5, 5, 5, 1, 3, 7, 3, 3, 5, 3, 1, 0, 0 },
        { 0, 1, 7, 5, 7, 1, 1, 7, 1, 3, 3, 5, 5, 3, 5, 5, 3, 3, 1, 7, 1, 1, 7, 5, 7, 1, 0 },
        { 1, 3, 7, 0, 1, 0, 0, 1, 1, 7, 0, 7, 5, 3, 5, 7, 0, 7, 1, 1, 0, 0, 1, 0, 7, 3, 1 },
        { 1, 0, 1, 1, 0, 0, 1, 7, 1, 3, 0, 1, 7, 5, 7, 1, 0, 3, 1, 7, 1, 0, 0, 1, 1, 0, 1 },
        { 0, 1, 0, 0, 0, 1, 7, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 1, 7, 3, 7, 1, 0, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 1, 5, 5, 3, 1, 1, 3, 5, 3, 5, 3, 1, 1, 3, 3, 3, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 5, 3, 3, 7, 1, 3, 7, 5, 7, 3, 1, 7, 3, 3, 7, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 1, 7, 3, 3, 7, 1, 0, 3, 3, 3, 0, 1, 7, 7, 7, 7, 1, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 1, 0, 7, 0, 7, 7, 1, 1, 7, 3, 5, 3, 7, 1, 1, 7, 7, 0, 7, 0, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 7, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
      };

      int [][] currentSprite = idle;

    //   @Override
    //   public void run() {
    //       try {
    //         while (true) {
    //             paint();
    //             Thread.sleep(1000);
    //         }
    //       } catch (Exception e) {
    //           //TODO: handle exception
    //       }
      
    //   }

     Charizard(int x, int y, Canvas canvas) {
        this.canvas = canvas;
        this.x = x;
        this.y = y;
        // mainThread = new Thread(this);
        // mainThread.start();
    }

    int[][] getCurrentSprite(Boolean clear) {
        if(lastSprite == SPRITE_1) {
            lastSprite = SPRITE_2;
            return clear ? this.idle : this.attack1;
        } else if(lastSprite == SPRITE_2) {
            lastSprite = SPRITE_3;
            return clear ? this.attack1 : this.attack2;
        }
        lastSprite = SPRITE_1;
        return clear ? this.attack2 : this.idle;
    }

    void incrementClickCount() {
        this.clickCount++;
    }

    void clear(int x, int y) {
        this.currentSprite = getCurrentSprite(true);
        for (int i = 0; i < HEIGHT; i++) {
            for (int j = 0; j < WIDTH; j++) {
                int tileValue = this.currentSprite[i][j];
                if (tileValue != 0) {
                    Color n = new Color(canvas.temp.getRGB(x + j, y + i));
                    canvas.putPixelPokemon(x + j, y + i, n);
                }
            }
        }
    }


    void paint( ) {
        this.currentSprite = getCurrentSprite(false);
        for (int i = 0; i < HEIGHT; i++) {
            for (int j = 0; j < WIDTH; j++) {
                int tileValue = currentSprite[i][j];
                if (tileValue != 0) {
                    canvas.putPixelPokemon(this.x + j, this.y + i, this.colors[tileValue]);
                } else {
                    Color n = new Color(canvas.temp.getRGB(this.x + j, this.y + i));
                    canvas.putPixelPokemon(this.x + j, this.y + i, n);
                }
            }
        }
    }
}

